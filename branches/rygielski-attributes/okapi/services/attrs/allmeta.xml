<xml>
	<brief>Get all attribute-related metadata</brief>
	<issue-id>194</issue-id> <!-- WRTODO: renamed from info -->
	<desc>
		This method returns a big chunk of all attribute-related metadata known
		to OKAPI. Usually you will not want to use this method - the result
		might be big enough to make your mobile application slow. Consider using
		one of the other methods in this module.
	</desc>
	<req name='attribute_set'>
		The attribute set to be returned, either
		<ul>
			<li><b>listing</b> for the listing attributes returned by the geocache(s)
			methods (A-Codes), or</li>
			<li><b>search</b> for the attributes used for searching (S-Codes).</li>
		</ul>
	</req>
	<common-format-params/>
	<returns>
		<p>For <em>attribute_set=listing</em>, a dictionary of the following structure:</p>
		
		<ul>
			<li>
				<p><b>attributes</b> - a dictionary. Attribute IDs are mapped to
				keys of this dictionary. Each value is a dictionary of the following
				structure:</p>
				
				<ul>
					<li>
						<b>id</b> - string, OKAPI's ID of the attribute (A-Code, the same as
						the one in the key),
					</li>
					<li>
						<p><b>gs_equivs</b> - a list of Groundspeak (geocaching.com)
						attributes, which have an exact (or very similar) meaning. Each
						attribute is described as a dictionary of the following structure:</p>
						
						<ul>
							<li><b>id</b> - ID of the Groundspeak attribute,</li>
							<li>
								<b>inc</b> - integer, either 1 or 0. See Geocaching.com's
								XSD for details on its meaning,
							</li>
							<li>
								<b>name</b> - the name of the attribute (as it is included
								in Groundspeak's GPX files).
							</li>
						</ul>
						
						<p>Note, that one Groundspeak ID may be present in many gs_equivs.</p>
					</li>
					<li>
						<p><b>internal_id</b> - the ID of this attribute in the local OC database.
						The internal ID is installation-dependent and should generally not be used.</p>
					</li>
					<li>
						<p><b>names</b> - a dictionary of all known names of the attribute,
						in various langauges (ISO 639-1 language code is used as dictionary key).</p>
						
						<p>If you'd like to help with the translations, see
						<a href='https://code.google.com/p/opencaching-api/source/browse/trunk/etc/attributes.xml'>here</a>.</p>
					</li>
					<li>
						<p><b>descriptions</b> - a dictionary of all known descriptions of
						the attribute, in various langauges (ISO 639-1 language code is used
						as dictionary key).</p>
						
						<p>If you'd like to help with the translations, see
						<a href='https://code.google.com/p/opencaching-api/source/browse/trunk/etc/attributes.xml'>here</a>.</p>
					</li>
					<!-- WRTODO: search_inc_captions -->
					<!-- WRTODO: search_exc_captions -->
				</ul>
			</li>
		</ul>

		<p>For <em>attribute_set=search</em>, a dictionary of the following structure:</p>

		<ul>
			<li>
				<p><b>attributes</b> - a dictionary. Attribute IDs are mapped to
				keys of this dictionary. Each value is a dictionary of the following
				structure:</p>

				<ul>
					<li>
						<b>id</b> - string, ID of the attribute (S-Code, the same as
						the one in the key),
					</li>
					<li>
						<p><b>musthave</b> - list of dictionaries, each of the following structure:</p>
						<ul>
							<li>
								<p><b>term</b> - expression which must be met when searching
								for this attribute, each string consisting of one ore more A-Codes and/or
								cache types combined with "or"; all tokens within a string separated by single
								spaces, cache types preceded by "T",</p>
							</li>
							<li>
								<p><b>internal_attr_ids</b> - list of the internal IDs of the
								attributes in the term; attributes which are not defined on the
								OC installation are represented by <i>null</i>,</p>
							</li>
							<li>
								<p><b>internal_cachetype_ids</b> - list of the internal IDs of
								the attributes in the term; cache types which are not defined
								on the OC installation are represented by <i>null</i>,</p>
							</li>
						</ul>
					</li>
					<li>
						<p><b>mustnothave</b> - list of dictionaries, each of the following structure:</p>
						<ul>
							<li>
								<p><b>term</b> - expression which must be met when searching
								for this attribute, each string consisting of one ore more A-Codes and/or
								cache types combined with "and"; all tokens within a string separated by single
								spaces, cache types preceded by "T",</p>
							</li>
							<li>
								<p><b>internal_attr_ids</b> - see <b>musthave</b></p>
							</li>
							<li>
								<p><b>internal_cachetype_ids</b> - see <b>musthave</b>,</p>
							</li>
						</ul>
					</li>
					<li>
						<b>names</b> - see <em>attribute_set=listing</em>,
					</li>
					<li>
						<b>descriptions</b> - see <em>attribute_set=listing</em>.
					</li>
					<li>
						<b>use</b> - boolean, <b>true</b> if the attribute is still in use, <b>false</b>
						if it has been discarded. Discarded attributes will be ignored when seached for
						and should not be presented to the user.
					</li>
				</ul>
			</li>
		</ul>

	</returns>
</xml>