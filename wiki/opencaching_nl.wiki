#summary OKAPI on OpenCaching.NL

*Contents*

<wiki:toc max_depth="3" />


= Introduction =

*This is a report on OKAPI and OpenCaching.NL integration "proceedings".*

Summary:

  * OCNL is based on OCDE code which is significantly different from OCPL branch.
  * Before this report was started, OKAPI was tested (and deployed) on sites originating from OCPL branch only. We want it to work on OCNL too.
  * When this integration succeeds, OKAPI should become 100% compatible with OCNL and (probably) 99% compatible with all other sites originating from OCDE branch (which is the real reason for doing this).
  * All proposed solutions involve changing *OKAPI code only*. We don't want to change *anything* in *any* of the OC servers, unless we have to. 

  
= Comparison method =

  * Downloaded all the code and MySQL structure from OCNL.
  * Did a detailed diff on both MySQL structures.
    * Dismissed the tables which existed on both sides and WERE NOT used by OKAPI.
    * Compared all the others, side by side, and dismissed all which clearly had nothing to do with logic exposed by OKAPI.
  * For all tables which I haven't been sure, I grepped the OCNL code in order to understand their logic.
  * Before commiting solutions, I tested them (briefly!) in a VM environment (using OCNL code and database structure).

  
= Problems and solutions =


== FIXED r358 - Attributes Problem (trivial) ==

Problem:
  * OCPL uses `cache_attrib` for storing attribute names.
  * OCNL uses `cache_attrib` *and translation tables* for storing attribute names.

*SOLUTION:*

OKAPI exposes attribute names in various methods, but the actual loading takes place in single block of code ([http://code.google.com/p/opencaching-api/source/browse/trunk/okapi/services/caches/geocaches.php?r=345#349 permalink]). We will simply add a proper condition there.

*TEST:*

http://i.imgur.com/mBuv6.png

http://i.imgur.com/ipZuU.png


== FIXED r361 - Log Time Problem (minor) ==

Problem:
  * OCPL's `cache_logs.date` field is of type `datetime`. OKAPI users expect to receive exact time along with all the log entries.
  * OCNL's `cache_logs.date` field is of type `date`. All times will be truncated.

*SOLUTION:*

We don't need to modify anything in OKAPI code (MySQL will simply truncate the time-part of INSERT queries made by OKAPI). But we should mention in the docs, that some servers won't store the time, and will always return "00:00:00" when asked for time of any log entry.

*TEST:*

http://i.imgur.com/5rpAJ.png


== FIXED r356 r363 - Deleted Logs Problem (average) ==

Problem:
  * OCPL uses `deleted` field to mark deleted logs.
  * OCNL uses `cache_logs_archived` archive and removes deleted entries from `cache_logs` table.
  
*SOLUTION:*

OKAPI never loads deleted entries, but uses `cache_logs` table in many queries. All those queries have `deleted = 0` condition in their WHERE section. We will have to parametrize all such queries (skip the condition when executed on OCNL). Also, one of OKAPI's modules (the replicate module) searches for deleted log entries in order to notify external developers that the log was deleted - this module will need to search `cache_logs_archived` instead.

BTW, OKAPI does not delete log entries (but it can add them).


== FIXED r365 - Personal Notes Problem (trivial) ==

Problem:
  * OCPL stores users' personal notes for each geocache in `cache_notes` table.
  * OCNL stores users' personal notes for each geocache in `coordinates` table (with type=2).

*SOLUTION:*

Currently OKAPI does not allow editing peronal notes, but it allows the developer to read them (only if he holds user's Access Token). Personal Notes are loaded in a single place in code ([http://code.google.com/p/opencaching-api/source/browse/trunk/okapi/services/caches/geocaches.php?r=345#444 permalink]). We will add a proper condition.

*TEST:*

http://i.imgur.com/dgZpU.png

== FIXED r369 r374 - Cache and User Stats Problem (average) ==

(see also r81)

Problem:
  * OCPL stores cache statistics (number of founds, not founds etc.) in `caches` and `user` tables.
  * OCNL stores cache statistics (number of founds, not founds etc.) in a separate `stat_caches` and `stat_user` tables.

*SOLUTION:*

  * OKAPI exposes cache stats via geocaches method, we will add a proper condition there ([http://code.google.com/p/opencaching-api/source/browse/trunk/okapi/services/caches/geocaches.php?r=345#113 permalink], with a sample IF statement added).
  * OKAPI allows extended searching on these attributes. We will need to modify the searching procedure. This won't be very hard though.
  * OKAPI currently does not actualy use user stats (but it can update them, see below).
  * OKAPI also *updates* cache _and_ user stats, after a new log entry have been submitted. This is done in a single place of code ([http://code.google.com/p/opencaching-api/source/browse/trunk/okapi/services/logs/submit.php?r=345#166 permalink]).
  * I grepped the code. It would seem that OCNL takes care of both `stat_` tables *using MySQL triggers*. This means, that OKAPI simply dosn't need to handle these updates on OCNL. I will add a proper condition.

*TEST:*

http://i.imgur.com/yYbpn.png

http://i.imgur.com/jXt3Z.png

http://i.imgur.com/gsfIt.png

http://i.imgur.com/D0IKa.png

http://i.imgur.com/GfPYB.png


== FIXED r370 - Log-type Name Problem (trivial) ==

Problem:
  * OCPL stores log-type names in `log_types` table.
  * OCNL stores log-type names in translation tables, connected to the `log_types` table.

*SOLUTION:*

OKAPI loads type names in a single block of code ([http://code.google.com/p/opencaching-api/source/browse/trunk/okapi/core.php?r=345#1173 permalink]). We will add a simple condition.

*TEST:*

http://i.imgur.com/0s6d5.png

== FIXED r367 - Waypoints Problem (minor) ==

Problem:
  * OCPL stores additional waypoints in `waypoints` table.
  * OCNL stores additional waypoints in `coordinates` table (with type=1).

*SOLUTION:*

OKAPI reads these waypoints in a single place ([http://code.google.com/p/opencaching-api/source/browse/trunk/okapi/services/caches/geocaches.php?r=345#531 permalink]). We will add a proper condition.

*TEST:*

http://i.imgur.com/qfDph.png

== FIXED r374 r375 - Ratings Problem (major) ==

Problem:
  * OCPL uses rating system. Each cache has a rating on a 1..5 scale.
  * OCDE does not use a rating system. They have the recommendation-system only.

Discussion extract: ;)

  * *harrieklomp50:* is it possible to make a kind of rating?, like a cache is found 10 times and 3 has given a recommendation so the result out of 100% is 30(%)
  * *rygielski:* This way, you could not make a difference between an average cache (which doesn't usually get recommendations) and REALLY BAD one.
  * *rygielski:* (on OCPL most average geocaches don't get any recommendations)
  * *harrieklomp50:* okay, no rating :-)

*SOLUTION:*

  * When user is retrieving cache data, he may ask for fields such as `rating` and `votes`. What should be OKAPI's response in case of OCNL?
    * A `null` value for `rating`, and 0 (zero) for `votes`. The docs already warn developers that the rating system is not implemented on some OC nodes and they do expect such values.
  * When user is searching for caches and he wants to retrieve only those with a rating between 4 and 5?
    * We will ignore these conditions. All caches will be returned.
  * When user wants to order the results by rating?
    * Results will be ordered arbitrarily.
  * When user submits a rating along with his new log entry?
    * There are three options: a) ignore it, b) report it as a user error, c) report it as a developer error. I don't like any of these options, but I will choose option A, it seems the least evil.
	* BTW. At this moment, OKAPI does not support posting ratings yet. I've been postponing this after I knew something more about OCDE database structure. I am planning to release support for this soon.

*TEST:*

http://i.imgur.com/dtqcd.png

= Other possible issues =

If you can think of any, post a comment.

  * Someone was worried about OKAPI making visible caches in OCNL which should not be visible. Something about a special status of a cache I think? I would like to hear more about it.
  * OCNL has two config files (one in `lib/`, other in `config/`) - is it safe to rely that both of them will stay there?
  * OKAPI changes `cache_logs.last_modified` type to timestamp (on OCNL it is datetime with a trigger on it). This should create any problem though.
  * OKAPI creates an extra `caches.okapi_syncbase` (timestamp) field which might be redundant with `last_modified` field in OCNL (but in OCPL it's not). This should create any problem though.
  * OCNL does not equal OCDE. Some more thingss mat be a little different.
